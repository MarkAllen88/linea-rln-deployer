require("dotenv/config");
const hre = require("hardhat");
const ethers = hre.ethers;

// -------------------------------------------------------------------
// USER‚ÄëCONFIGURATION
// -------------------------------------------------------------------
const TREE_DEPTH = 20;   // you can change this if you need a different depth
const IDENTITY_COMMITMENT =
  "0x5f3c9a7e2d1b4f8a6c9e3d7b0a1f2c4d8e9b7a6c3d5e1f0a2b4c6d8e9f1a3b5";

async function main() {
  // ---------------------------------------------------------------
  // 0Ô∏è‚É£ Deployer (owner) signer
  // ---------------------------------------------------------------
  const [deployer] = await ethers.getSigners();
  console.log("üë§ Deployer (owner):", deployer.address);

  // ---------------------------------------------------------------
  // 1Ô∏è‚É£ Deploy Semaphore (needs only the tree depth)
  // ---------------------------------------------------------------
  const SemaphoreFactory = await ethers.getContractFactory("Semaphore", deployer);
  const semaphore = await SemaphoreFactory.deploy(TREE_DEPTH);
  await semaphore.waitForDeployment();
  console.log("üõ°Ô∏è Semaphore deployed at:", semaphore.target);
  console.log("   ‚Ü≥ Tree depth:", TREE_DEPTH);

  // ---------------------------------------------------------------
  // 2Ô∏è‚É£ Deploy the RLN forwarder, giving it the Semaphore address
  // ---------------------------------------------------------------
  const RlnFactory = await ethers.getContractFactory("RlnForwarder", deployer);
  const rln = await RlnFactory.deploy(semaphore.target);
  await rln.waitForDeployment();
  console.log("üöÄ RLN forwarder deployed at:", rln.target);

  // ---------------------------------------------------------------
  // 3Ô∏è‚É£ Authorise the forwarder inside Semaphore (one‚Äëtime only)
  // ---------------------------------------------------------------
  const txSet = await semaphore.setRLNContract(rln.target);
  const receiptSet = await txSet.wait();               // ‚Üê ethers‚ÄØv6 returns a receipt with .hash
  console.log(
    "‚úÖ Semaphore now authorises RLN forwarder ‚Äì tx hash:",
    receiptSet.hash                                 // <-- use .hash, not .transactionHash
  );

  // ---------------------------------------------------------------
  // 4Ô∏è‚É£ Register the member via the forwarder (now authorised)
  // ---------------------------------------------------------------
  const txAdd = await rln.registerMember(IDENTITY_COMMITMENT);
  const receiptAdd = await txAdd.wait();
  console.log("‚úÖ Member added ‚Äì tx hash:", receiptAdd.hash);
}

// ---------------------------------------------------------------
main().catch((e) => {
  console.error("‚ùå Failed:", e);
  process.exit(1);
});
